- become: true
  handlers:
  - listen: restart nginx
    name: restart nginx
    service:
      name: nginx
      state: restarted
  hosts: '{{ target_servers | default(''all'') }}'
  name: Configure webapp
  tasks:
  - block:
    - loop:
      - nginx
      - docker
      name: Install required packages
      package:
        name: '{{ item }}'
        state: present
        update_cache: true
    name: Packages tasks
  - block:
    - copy:
        content: '"events {}\nhttp {\n    server {\n        listen 80;\n        server_name
          localhost;\n        location / {\n            return 200 ''Hello from Ansible!'';\n        }\n    }\n}"'
        dest: /etc/nginx/nginx.conf
        group: root
        mode: '0644'
        owner: root
      name: Create/modify /etc/nginx/nginx.conf
      notify:
      - restart nginx
      when: ansible_distribution == 'Ubuntu'
    - changed_when: nginx_started_result is changed
      delay: 5
      failed_when: nginx_started_result is failed
      name: Ensure nginx is started
      register: nginx_started_result
      retries: 3
      service:
        enabled: 'yes'
        name: nginx
        state: started
      when: ansible_distribution == 'Ubuntu'
    - changed_when: false
      command: systemctl is-active nginx
      delay: 5
      failed_when: verify_nginx.rc != 0
      name: Verify nginx
      register: verify_nginx
      retries: 1
    name: Other tasks
  vars:
    target_db_servers: db_servers
    target_web_servers: web_servers
